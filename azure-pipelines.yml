trigger:
  branches:
    include:
      - tests_enhacements

pool:
  vmImage: 'ubuntu-latest'

variables:
  CI: 'true'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
    npm install -g serve
    serve -s build &> serve.log &
  displayName: 'Build and Serve Frontend'

- script: |
    cd ./app-management
    npm install
    export NODE_ENV=local
    npm start &
  displayName: 'Start Backend'

- script: |
    echo "Waiting for backend to start..."
    for i in {1..30}; do
      curl --silent http://localhost:5000 && break
      echo "Backend not ready yet, retrying..."
      sleep 2
    done
  displayName: 'Wait for Backend to Start'

- script: |
    mkdir -p ./webdriverio_test_project/junit-results
  displayName: 'Ensure junit-results Directory Exists'

- script: |
    mkdir -p ./webdriverio_test_project/error_Screenshots_local
    mkdir -p ./webdriverio_test_project/success_Screenshots_local
  displayName: "Ensure Screenshots Directories"

- script: |
    echo "Listing test results directory:"
    ls -la ./webdriverio_test_project/junit-results
  displayName: "Debug Test Results Directory"

- script: |
    echo "Listing test results directory:"
    ls -la ./webdriverio_test_project/junit-results
  displayName: "Debug Test Results Directory"
  condition: always()

- script: |
    sleep 5
  displayName: "Wait Before Publishing Results"
  condition: always()

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/results-*.xml'
  condition: always()
  displayName: "Publish Test Results"

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: './webdriverio_test_project/error_Screenshots_local'
    ArtifactName: 'FailedScreenshots'
    publishLocation: 'Container'
  condition: always()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: './webdriverio_test_project/success_Screenshots_local'
    ArtifactName: 'SuccessfulScreenshots'
    publishLocation: 'Container'
  condition: always()

  env:
    TEST_USERNAME: $(TEST_USERNAME)
    TEST_PASSWORD: $(TEST_PASSWORD)

